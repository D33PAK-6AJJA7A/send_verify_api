/*
 * SendVerify API
 * Improve deliverability of your email list by automatically cleaning all emails before sending to them. 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.32
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModelsAccount', 'model/ModelsAuthInfo', 'model/ModelsBillingPortalSession', 'model/ModelsBulkResponse', 'model/ModelsCleanedList', 'model/ModelsCountStat', 'model/ModelsCountry', 'model/ModelsCoupon', 'model/ModelsCouponOptions', 'model/ModelsCreditsInfo', 'model/ModelsDeleteResponse', 'model/ModelsEAccount', 'model/ModelsEAccountMember', 'model/ModelsEmailList', 'model/ModelsJobStatus', 'model/ModelsListCleaningJob', 'model/ModelsMember', 'model/ModelsPaymentAddress', 'model/ModelsPaymentOptions', 'model/ModelsPaymentStatus', 'model/ModelsPricing', 'model/ModelsSingleCleanedMail', 'model/ModelsTaxDetails', 'model/ModelsValidationReason', 'api/AccountmemberApi', 'api/AccountpaymentApi', 'api/AccountsettingApi', 'api/AccountvalidationApi', 'api/AuthApi', 'api/ClusterApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ModelsAccount'), require('./model/ModelsAuthInfo'), require('./model/ModelsBillingPortalSession'), require('./model/ModelsBulkResponse'), require('./model/ModelsCleanedList'), require('./model/ModelsCountStat'), require('./model/ModelsCountry'), require('./model/ModelsCoupon'), require('./model/ModelsCouponOptions'), require('./model/ModelsCreditsInfo'), require('./model/ModelsDeleteResponse'), require('./model/ModelsEAccount'), require('./model/ModelsEAccountMember'), require('./model/ModelsEmailList'), require('./model/ModelsJobStatus'), require('./model/ModelsListCleaningJob'), require('./model/ModelsMember'), require('./model/ModelsPaymentAddress'), require('./model/ModelsPaymentOptions'), require('./model/ModelsPaymentStatus'), require('./model/ModelsPricing'), require('./model/ModelsSingleCleanedMail'), require('./model/ModelsTaxDetails'), require('./model/ModelsValidationReason'), require('./api/AccountmemberApi'), require('./api/AccountpaymentApi'), require('./api/AccountsettingApi'), require('./api/AccountvalidationApi'), require('./api/AuthApi'), require('./api/ClusterApi'));
  }
}(function(ApiClient, ModelsAccount, ModelsAuthInfo, ModelsBillingPortalSession, ModelsBulkResponse, ModelsCleanedList, ModelsCountStat, ModelsCountry, ModelsCoupon, ModelsCouponOptions, ModelsCreditsInfo, ModelsDeleteResponse, ModelsEAccount, ModelsEAccountMember, ModelsEmailList, ModelsJobStatus, ModelsListCleaningJob, ModelsMember, ModelsPaymentAddress, ModelsPaymentOptions, ModelsPaymentStatus, ModelsPricing, ModelsSingleCleanedMail, ModelsTaxDetails, ModelsValidationReason, AccountmemberApi, AccountpaymentApi, AccountsettingApi, AccountvalidationApi, AuthApi, ClusterApi) {
  'use strict';

  /**
   * Improve_deliverability_of_your_email_list_by_automatically_cleaning_all_emails_before_sending_to_them_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var SendVerifyApi = require('index'); // See note below*.
   * var xxxSvc = new SendVerifyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new SendVerifyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new SendVerifyApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new SendVerifyApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ModelsAccount model constructor.
     * @property {module:model/ModelsAccount}
     */
    ModelsAccount: ModelsAccount,
    /**
     * The ModelsAuthInfo model constructor.
     * @property {module:model/ModelsAuthInfo}
     */
    ModelsAuthInfo: ModelsAuthInfo,
    /**
     * The ModelsBillingPortalSession model constructor.
     * @property {module:model/ModelsBillingPortalSession}
     */
    ModelsBillingPortalSession: ModelsBillingPortalSession,
    /**
     * The ModelsBulkResponse model constructor.
     * @property {module:model/ModelsBulkResponse}
     */
    ModelsBulkResponse: ModelsBulkResponse,
    /**
     * The ModelsCleanedList model constructor.
     * @property {module:model/ModelsCleanedList}
     */
    ModelsCleanedList: ModelsCleanedList,
    /**
     * The ModelsCountStat model constructor.
     * @property {module:model/ModelsCountStat}
     */
    ModelsCountStat: ModelsCountStat,
    /**
     * The ModelsCountry model constructor.
     * @property {module:model/ModelsCountry}
     */
    ModelsCountry: ModelsCountry,
    /**
     * The ModelsCoupon model constructor.
     * @property {module:model/ModelsCoupon}
     */
    ModelsCoupon: ModelsCoupon,
    /**
     * The ModelsCouponOptions model constructor.
     * @property {module:model/ModelsCouponOptions}
     */
    ModelsCouponOptions: ModelsCouponOptions,
    /**
     * The ModelsCreditsInfo model constructor.
     * @property {module:model/ModelsCreditsInfo}
     */
    ModelsCreditsInfo: ModelsCreditsInfo,
    /**
     * The ModelsDeleteResponse model constructor.
     * @property {module:model/ModelsDeleteResponse}
     */
    ModelsDeleteResponse: ModelsDeleteResponse,
    /**
     * The ModelsEAccount model constructor.
     * @property {module:model/ModelsEAccount}
     */
    ModelsEAccount: ModelsEAccount,
    /**
     * The ModelsEAccountMember model constructor.
     * @property {module:model/ModelsEAccountMember}
     */
    ModelsEAccountMember: ModelsEAccountMember,
    /**
     * The ModelsEmailList model constructor.
     * @property {module:model/ModelsEmailList}
     */
    ModelsEmailList: ModelsEmailList,
    /**
     * The ModelsJobStatus model constructor.
     * @property {module:model/ModelsJobStatus}
     */
    ModelsJobStatus: ModelsJobStatus,
    /**
     * The ModelsListCleaningJob model constructor.
     * @property {module:model/ModelsListCleaningJob}
     */
    ModelsListCleaningJob: ModelsListCleaningJob,
    /**
     * The ModelsMember model constructor.
     * @property {module:model/ModelsMember}
     */
    ModelsMember: ModelsMember,
    /**
     * The ModelsPaymentAddress model constructor.
     * @property {module:model/ModelsPaymentAddress}
     */
    ModelsPaymentAddress: ModelsPaymentAddress,
    /**
     * The ModelsPaymentOptions model constructor.
     * @property {module:model/ModelsPaymentOptions}
     */
    ModelsPaymentOptions: ModelsPaymentOptions,
    /**
     * The ModelsPaymentStatus model constructor.
     * @property {module:model/ModelsPaymentStatus}
     */
    ModelsPaymentStatus: ModelsPaymentStatus,
    /**
     * The ModelsPricing model constructor.
     * @property {module:model/ModelsPricing}
     */
    ModelsPricing: ModelsPricing,
    /**
     * The ModelsSingleCleanedMail model constructor.
     * @property {module:model/ModelsSingleCleanedMail}
     */
    ModelsSingleCleanedMail: ModelsSingleCleanedMail,
    /**
     * The ModelsTaxDetails model constructor.
     * @property {module:model/ModelsTaxDetails}
     */
    ModelsTaxDetails: ModelsTaxDetails,
    /**
     * The ModelsValidationReason model constructor.
     * @property {module:model/ModelsValidationReason}
     */
    ModelsValidationReason: ModelsValidationReason,
    /**
     * The AccountmemberApi service constructor.
     * @property {module:api/AccountmemberApi}
     */
    AccountmemberApi: AccountmemberApi,
    /**
     * The AccountpaymentApi service constructor.
     * @property {module:api/AccountpaymentApi}
     */
    AccountpaymentApi: AccountpaymentApi,
    /**
     * The AccountsettingApi service constructor.
     * @property {module:api/AccountsettingApi}
     */
    AccountsettingApi: AccountsettingApi,
    /**
     * The AccountvalidationApi service constructor.
     * @property {module:api/AccountvalidationApi}
     */
    AccountvalidationApi: AccountvalidationApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The ClusterApi service constructor.
     * @property {module:api/ClusterApi}
     */
    ClusterApi: ClusterApi
  };

  return exports;
}));
