/*
 * SendVerify API
 * Improve deliverability of your email list by automatically cleaning all emails before sending to them. 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendVerifyApi);
  }
}(this, function(expect, SendVerifyApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ModelsAccount', function() {
      beforeEach(function() {
        instance = new SendVerifyApi.ModelsAccount();
      });

      it('should create an instance of ModelsAccount', function() {
        // TODO: update the code to test ModelsAccount
        expect(instance).to.be.a(SendVerifyApi.ModelsAccount);
      });

      it('should have the property apiKey (base name: "apiKey")', function() {
        // TODO: update the code to test the property apiKey
        expect(instance).to.have.property('apiKey');
        // expect(instance.apiKey).to.be(expectedValueLiteral);
      });

      it('should have the property created (base name: "created")', function() {
        // TODO: update the code to test the property created
        expect(instance).to.have.property('created');
        // expect(instance.created).to.be(expectedValueLiteral);
      });

      it('should have the property creditsRemaining (base name: "creditsRemaining")', function() {
        // TODO: update the code to test the property creditsRemaining
        expect(instance).to.have.property('creditsRemaining');
        // expect(instance.creditsRemaining).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property isAdmin (base name: "isAdmin")', function() {
        // TODO: update the code to test the property isAdmin
        expect(instance).to.have.property('isAdmin');
        // expect(instance.isAdmin).to.be(expectedValueLiteral);
      });

      it('should have the property isCanceled (base name: "isCanceled")', function() {
        // TODO: update the code to test the property isCanceled
        expect(instance).to.have.property('isCanceled');
        // expect(instance.isCanceled).to.be(expectedValueLiteral);
      });

      it('should have the property isUpgraded (base name: "isUpgraded")', function() {
        // TODO: update the code to test the property isUpgraded
        expect(instance).to.have.property('isUpgraded');
        // expect(instance.isUpgraded).to.be(expectedValueLiteral);
      });

      it('should have the property locked (base name: "locked")', function() {
        // TODO: update the code to test the property locked
        expect(instance).to.have.property('locked');
        // expect(instance.locked).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property sendpostSubaccountApiKey (base name: "sendpost_subaccount_api_key")', function() {
        // TODO: update the code to test the property sendpostSubaccountApiKey
        expect(instance).to.have.property('sendpostSubaccountApiKey');
        // expect(instance.sendpostSubaccountApiKey).to.be(expectedValueLiteral);
      });

      it('should have the property sendpostSubaccountId (base name: "sendpost_subaccount_id")', function() {
        // TODO: update the code to test the property sendpostSubaccountId
        expect(instance).to.have.property('sendpostSubaccountId');
        // expect(instance.sendpostSubaccountId).to.be(expectedValueLiteral);
      });

      it('should have the property stripeBasePriceId (base name: "stripeBasePriceId")', function() {
        // TODO: update the code to test the property stripeBasePriceId
        expect(instance).to.have.property('stripeBasePriceId');
        // expect(instance.stripeBasePriceId).to.be(expectedValueLiteral);
      });

    });
  });

}));
